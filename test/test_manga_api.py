# coding: utf-8

"""
    MangaDex API

    MangaDex is an ad-free manga reader offering high-quality images!  This document details our API as it is right now. It is in no way a promise to never change it, although we will endeavour to publicly notify any major change.  # Acceptable use policy  Usage of our services implies acceptance of the following: - You **MUST** credit us - You **MUST** credit scanlation groups if you offer the ability to read chapters - You **CANNOT** run ads or paid services on your website and/or apps  These may change at any time for any and no reason and it is up to you check for updates from time to time.  # Security issues  If you believe you found a security issue in our API, please check our [security.txt](/security.txt) to get in touch privately. 

    The version of the OpenAPI document: 5.10.2
    Contact: support@mangadex.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from mangadex_openapi.api.manga_api import MangaApi


class TestMangaApi(unittest.TestCase):
    """MangaApi unit test stubs"""

    def setUp(self) -> None:
        self.api = MangaApi()

    def tearDown(self) -> None:
        pass

    def test_commit_manga_draft(self) -> None:
        """Test case for commit_manga_draft

        Submit a Manga Draft
        """
        pass

    def test_delete_manga_id(self) -> None:
        """Test case for delete_manga_id

        Delete Manga
        """
        pass

    def test_delete_manga_id_follow(self) -> None:
        """Test case for delete_manga_id_follow

        Unfollow Manga
        """
        pass

    def test_delete_manga_relation_id(self) -> None:
        """Test case for delete_manga_relation_id

        Delete Manga relation
        """
        pass

    def test_get_manga_aggregate(self) -> None:
        """Test case for get_manga_aggregate

        Get Manga volumes & chapters
        """
        pass

    def test_get_manga_drafts(self) -> None:
        """Test case for get_manga_drafts

        Get a list of Manga Drafts
        """
        pass

    def test_get_manga_id(self) -> None:
        """Test case for get_manga_id

        Get Manga
        """
        pass

    def test_get_manga_id_draft(self) -> None:
        """Test case for get_manga_id_draft

        Get a specific Manga Draft
        """
        pass

    def test_get_manga_id_feed(self) -> None:
        """Test case for get_manga_id_feed

        Manga feed
        """
        pass

    def test_get_manga_id_status(self) -> None:
        """Test case for get_manga_id_status

        Get a Manga reading status
        """
        pass

    def test_get_manga_random(self) -> None:
        """Test case for get_manga_random

        Get a random Manga
        """
        pass

    def test_get_manga_relation(self) -> None:
        """Test case for get_manga_relation

        Manga relation list
        """
        pass

    def test_get_manga_status(self) -> None:
        """Test case for get_manga_status

        Get all Manga reading status for logged User
        """
        pass

    def test_get_manga_tag(self) -> None:
        """Test case for get_manga_tag

        Tag list
        """
        pass

    def test_get_search_manga(self) -> None:
        """Test case for get_search_manga

        Manga list
        """
        pass

    def test_post_manga(self) -> None:
        """Test case for post_manga

        Create Manga
        """
        pass

    def test_post_manga_id_follow(self) -> None:
        """Test case for post_manga_id_follow

        Follow Manga
        """
        pass

    def test_post_manga_id_status(self) -> None:
        """Test case for post_manga_id_status

        Update Manga reading status
        """
        pass

    def test_post_manga_relation(self) -> None:
        """Test case for post_manga_relation

        Create Manga relation
        """
        pass

    def test_put_manga_id(self) -> None:
        """Test case for put_manga_id

        Update Manga
        """
        pass


if __name__ == '__main__':
    unittest.main()
